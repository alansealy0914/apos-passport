{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nexport let CreateOrderComponent = /*#__PURE__*/(() => {\n  class CreateOrderComponent {\n    constructor( //private orderService: OrderService,\n    //private customerService: CustomerService,\n    router) {\n      this.router = router;\n      this.title = 'Create New Order';\n      this.sortReverse = false;\n    }\n\n    ngOnInit() {\n      /*const ordersData = observableFrom(this.orderService.getOrders());\r\n      observableForkJoin([\r\n        ordersData,\r\n        this.customerService.getCustomers()\r\n      ]).subscribe((data: [Order[], Customer[]]) => {\r\n        this.orders = data[0] as Order[];\r\n        this.customers = data[1] as Customer[];\r\n        this.orders.forEach(order => {\r\n          // tslint:disable-next-line: no-shadowed-variable\r\n          const customer = _.find(this.customers, (customer: { id: number; }) => {\r\n            return order.customerId === customer.id;\r\n          });\r\n          order.customerName = customer.fullName;\r\n        });\r\n              this.filteredOrders = this.orders;\r\n        this.sortOrders('id');\r\n      });*/\n    } // I used arrow syntax for the below functions,\n    // which you shouldn't do because they transpile differently.\n    // Everything else is exactly the same.\n\n\n    goToCreateOrder() {\n      this.router.navigate(['/orders/create']);\n    }\n\n    sortOrders(property) {\n      this.sortType = property;\n      this.sortReverse = !this.sortReverse;\n      this.filteredOrders.sort(this.dynamicSort(property));\n    }\n\n    dynamicSort(property) {\n      let sortOrder = -1;\n\n      if (this.sortReverse) {\n        sortOrder = 1;\n      }\n\n      return function (a, b) {\n        const result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    }\n\n    filterOrders(search) {\n      this.filteredOrders = this.orders.filter(o => Object.keys(o).some(k => {\n        if (typeof o[k] === 'string') {\n          return o[k].toLowerCase().includes(search.toLowerCase());\n        }\n      }));\n    }\n\n  }\n\n  CreateOrderComponent.ɵfac = function CreateOrderComponent_Factory(t) {\n    return new (t || CreateOrderComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  CreateOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateOrderComponent,\n    selectors: [[\"app-create-order\"]],\n    decls: 13,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-sm-12\"], [1, \"form-inline\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-md\", 2, \"box-shadow\", \"0px 8px 16px 0px rgba(14, 13, 13, 0.342)\", \"font-size\", \"14px\", 3, \"click\"], [\"routerLink\", \"/create-order\", 2, \"color\", \"white\"]],\n    template: function CreateOrderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"br\")(1, \"br\");\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"h4\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 2)(8, \"form\", 3);\n        i0.ɵɵtext(9, \" \\u00A0\");\n        i0.ɵɵelementStart(10, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function CreateOrderComponent_Template_button_click_10_listener() {\n          return ctx.goToCreateOrder();\n        });\n        i0.ɵɵelementStart(11, \"a\", 5);\n        i0.ɵɵtext(12, \"Place new Order\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.title);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i1.RouterLinkWithHref],\n    styles: [\"\"]\n  });\n  return CreateOrderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}